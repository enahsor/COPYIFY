diff --git a/src/components/index.js b/src/components/index.js
index 9ba5037..684a7e1 100644
--- a/src/components/index.js
+++ b/src/components/index.js
@@ -1,26 +1,55 @@
 import styled from 'styled-components'
 import Player from './player'
-import Mini from './mini'
-
+/*import Mini from './mini'*/
+/*import Navigator from './navigator'*/
+/*import SizeSwitch from './sizeSwitch'*/
+import { animated, useSpring } from 'react-spring'
 import { GlobalStyles } from '../styles/globalStyles'
 import React from 'react'
+import { useSelector, useDispatch } from 'react-redux'
+import { set } from '../actions'
 
-const AppWrapper = styled.div`
+const AppWrapper = styled(animated.div)`
     width: 100vw;
-    height: 100vh;
     background-color: ${(props) => props.theme.priColor};
     position: relative;
 `
 
 function App() {
+    const mobileWidth = useSelector((state) => state.mobileWidth)
+    const mobileHeight = useSelector((state) => state.mobileHeight)
+    const mobile = useSelector((state) => state.mobile)
+    const dispatch = useDispatch()
+
+    const convertToPercent = (numerator, denominator) => {
+        return (numerator / denominator) * 100
+    }
+
+    if (window.innerWidth < mobileWidth) {
+        dispatch(set({ mobileWidth: window.innerWidth }))
+    }
+    if (window.innerHeight < mobileHeight) {
+        dispatch(set({ mobileHeight: window.innerHeight }))
+    }
+
+    const props = useSpring({
+        width: mobile
+            ? `${convertToPercent(mobileWidth, window.innerWidth)}vw`
+            : `100vw`,
+        height: mobile
+            ? `${convertToPercent(mobileHeight, window.innerHeight)}vh`
+            : `100vh`,
+    })
+
     return (
         <>
             <GlobalStyles />
-
-            <AppWrapper>
+            {/*window.innerWidth <= mobileSize ? '' : <SizeSwitch />*/}
+            {/*<SizeSwitch />*/}
+            <AppWrapper style={props}>
                 {/*<Navigator />*/}
                 <Player />
-                <Mini />
+                {/*<Mini />*/}
             </AppWrapper>
         </>
     )
diff --git a/src/components/mini/controls/index.js b/src/components/mini/controls/index.js
index a25b2de..34e1cba 100644
--- a/src/components/mini/controls/index.js
+++ b/src/components/mini/controls/index.js
@@ -23,11 +23,10 @@ export default function Controls() {
     const playing = useSelector((state) => state.playing)
     const dispatch = useDispatch()
 
-    const handleEvent = (e) => {
-        switch (e.type) {
+    const handleEvent = ({ type }) => {
+        switch (type) {
             case 'click':
                 dispatch(inverse({ playing }))
-                e.stopPropagation()
                 break
             default:
                 break
diff --git a/src/components/mini/index.js b/src/components/mini/index.js
index 25366f8..abe5c16 100644
--- a/src/components/mini/index.js
+++ b/src/components/mini/index.js
@@ -3,42 +3,21 @@ import styled from 'styled-components'
 import Controls from './controls'
 import Song from './song'
 import Seeker from './seeker'
-import { queries } from '../mediaQuery'
-import { useSelector, useDispatch } from 'react-redux'
-import { inverse } from '../../actions'
-import { useSpring, animated } from 'react-spring'
 
 const InnerWrapper = styled.div`
     display: flex;
     justify-content: space-between;
     align-items: center;
 `
-const Wrapper = styled(animated.div)`
+const Wrapper = styled.div`
     position: absolute;
-    transform: translateY(0%);
+    top: 200px;
     background-color: ${({ theme }) => theme.terColor};
     width: 100%;
-    display: none;
-    top: 100%;
-    @media all and (max-width: ${queries.large}px) {
-        display: block;
-        background-color: ${({ theme }) => theme.terColor};
-    }
 `
 export default function Mini() {
-    const playerDown = useSelector((state) => state.playerDown)
-    const dispatch = useDispatch()
-
-    const handleClick = () => {
-        dispatch(inverse({ playerDown }))
-    }
-
-    const props = useSpring({
-        transform: `translateY(${playerDown ? '-100%' : '0%'})`,
-    })
-
     return (
-        <Wrapper style={props} onClick={handleClick}>
+        <Wrapper>
             <Seeker />
             <InnerWrapper>
                 <Song />
diff --git a/src/components/mini/song/index.js b/src/components/mini/song/index.js
index ce12a5e..b877225 100644
--- a/src/components/mini/song/index.js
+++ b/src/components/mini/song/index.js
@@ -11,7 +11,6 @@ const Info = styled.div`
 `
 const ArtWrapper = styled.div`
     margin-right: 20px;
-    max-width: 100px;
 `
 
 const SongMeta = styled.div`
diff --git a/src/components/player/controls/index.js b/src/components/player/controls/index.js
index 6c8c764..3798087 100644
--- a/src/components/player/controls/index.js
+++ b/src/components/player/controls/index.js
@@ -15,7 +15,7 @@ const Wrapper = styled.div`
     align-items: center;
     grid-area: CONTROLS;
     margin: 0 auto;
-    margin-top: 10px;
+
     @media all and (min-width: ${queries.large}px) {
         grid-column: 4/8;
         grid-row: 2/3;
diff --git a/src/components/player/header/minimizer/index.js b/src/components/player/header/minimizer/index.js
index 6a8b7ad..2d03b7c 100644
--- a/src/components/player/header/minimizer/index.js
+++ b/src/components/player/header/minimizer/index.js
@@ -1,17 +1,11 @@
 import React from 'react'
 import { ReactComponent as Icon } from '../../../../svgs/minimizer.svg'
 import { IconStyle } from '../iconStyles'
-import { useSelector, useDispatch } from 'react-redux'
-import { inverse } from '../../../../actions'
 
 const IconWrapper = IconStyle(Icon)
 
 export default function Minimizer() {
-    const dispatch = useDispatch()
-    const playerDown = useSelector((state) => state.playerDown)
-    const handleEvent = () => {
-        dispatch(inverse({ playerDown }))
-    }
+    const handleEvent = () => {}
 
     return <IconWrapper onClick={handleEvent} />
 }
diff --git a/src/components/player/index.js b/src/components/player/index.js
index 6200502..6e81714 100644
--- a/src/components/player/index.js
+++ b/src/components/player/index.js
@@ -6,10 +6,9 @@ import Song from './song'
 import Seeker from './seeker'
 import { queries } from '../mediaQuery'
 import { useSelector } from 'react-redux'
-import { useSpring, animated } from 'react-spring'
 
-const PlayerWrapper = styled(animated.div)`
-    background-color: ${(props) => props.playercolor};
+const PlayerWrapper = styled.div`
+    background-color: ${(props) => props.playerColor};
     position: absolute;
     left: 0;
     right: 0;
@@ -38,15 +37,9 @@ const PlayerWrapper = styled(animated.div)`
 
 export default function Player() {
     const playerColor = useSelector((state) => state.playerColor)
-    const playerDown = useSelector((state) => state.playerDown)
-
-    const props = useSpring({
-        transform: `translateY(${playerDown ? '90%' : '0%'})`,
-        opacity: playerDown ? 0 : 1,
-    })
 
     return (
-        <PlayerWrapper playercolor={playerColor} style={props}>
+        <PlayerWrapper playerColor={playerColor}>
             <Header />
             <Song />
             <Seeker />
diff --git a/src/components/player/song/art/index.js b/src/components/player/song/art/index.js
index fa0e17a..a8f3589 100644
--- a/src/components/player/song/art/index.js
+++ b/src/components/player/song/art/index.js
@@ -5,10 +5,8 @@ import { queries } from '../../../mediaQuery'
 
 const Wrapper = styled.div`
     width: 100%;
-    margin-bottom: ${(props) => (props.marginBottom ? `20px` : '0px')};
+    margin-bottom: 20px;
     display: flex;
-    max-width: 100%;
-    min-width: 50px;
 
     @media all and (min-width: ${queries.large}px) {
         max-width: 80px;
@@ -22,7 +20,7 @@ const Image = styled.img`
     user-select: none;
 `
 
-export default function Art({ art, getColor, marginBottom }) {
+export default function Art({ art, getColor }) {
     const imageRef = useRef(null)
     const googleProxy = `https://images1-focus-opensocial.googleusercontent.com/gadgets/proxy?container=focus&refresh=2592000&url=`
     const src = googleProxy + art
@@ -30,7 +28,7 @@ export default function Art({ art, getColor, marginBottom }) {
     const onLoad = getColor ? getColor(imageRef) : () => {}
 
     return (
-        <Wrapper marginBottom={marginBottom}>
+        <Wrapper>
             <Image
                 src={src}
                 alt={`music art cover`}
@@ -46,5 +44,4 @@ export default function Art({ art, getColor, marginBottom }) {
 Art.propTypes = {
     art: PropTypes.string,
     getColor: PropTypes.func,
-    marginBottom: PropTypes.bool,
 }
diff --git a/src/components/player/song/index.js b/src/components/player/song/index.js
index cd2b22d..4c2d615 100644
--- a/src/components/player/song/index.js
+++ b/src/components/player/song/index.js
@@ -69,11 +69,7 @@ export default function Song() {
 
     return (
         <Container>
-            <Art
-                art={firstSong.cover}
-                getColor={getColorFromImage}
-                marginBottom
-            />
+            <Art art={firstSong.cover} getColor={getColorFromImage} />
             <Wrapper>
                 <BasicInfo>
                     <Name name={firstSong.title} size={20} />
diff --git a/src/store/index.js b/src/store/index.js
index 05bca40..f8cafa9 100644
--- a/src/store/index.js
+++ b/src/store/index.js
@@ -6,7 +6,6 @@ const initialState = {
     mobile: false,
     mobileWidth: 375,
     mobileHeight: 812,
-    playerDown: false,
     playing: false,
     liked: false,
     clickedLike: false,
diff --git a/src/styles/globalStyles.js b/src/styles/globalStyles.js
index 31a8f32..ab5f5d0 100644
--- a/src/styles/globalStyles.js
+++ b/src/styles/globalStyles.js
@@ -16,7 +16,6 @@ body{
     justify-content: center;
     align-items: center;
     user-select: none;
-    overflow: hidden;
 }
 
 svg:hover{
